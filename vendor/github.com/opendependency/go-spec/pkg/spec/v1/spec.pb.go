//
//Copyright The OpenDependency Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: spec.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DependencyDirection describes a dependency direction.
type DependencyDirection int32

const (
	// UPSTREAM describes a dependency to another module this module depends on.
	DependencyDirection_UPSTREAM DependencyDirection = 0
	// DOWNSTREAM describes a dependency to another module which depends on this module.
	DependencyDirection_DOWNSTREAM DependencyDirection = 1
)

// Enum value maps for DependencyDirection.
var (
	DependencyDirection_name = map[int32]string{
		0: "UPSTREAM",
		1: "DOWNSTREAM",
	}
	DependencyDirection_value = map[string]int32{
		"UPSTREAM":   0,
		"DOWNSTREAM": 1,
	}
)

func (x DependencyDirection) Enum() *DependencyDirection {
	p := new(DependencyDirection)
	*p = x
	return p
}

func (x DependencyDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DependencyDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_proto_enumTypes[0].Descriptor()
}

func (DependencyDirection) Type() protoreflect.EnumType {
	return &file_spec_proto_enumTypes[0]
}

func (x DependencyDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DependencyDirection.Descriptor instead.
func (DependencyDirection) EnumDescriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{0}
}

// ModuleVersion represents the module version details.
type ModuleVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name specifies the actual module version.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Schema describes the used version schema.
	Schema *string `protobuf:"bytes,2,opt,name=schema,proto3,oneof" json:"schema,omitempty"`
	// Replaces specifies an array of module versions replaced by this module version.
	Replaces []string `protobuf:"bytes,3,rep,name=replaces,proto3" json:"replaces,omitempty"`
}

func (x *ModuleVersion) Reset() {
	*x = ModuleVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleVersion) ProtoMessage() {}

func (x *ModuleVersion) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleVersion.ProtoReflect.Descriptor instead.
func (*ModuleVersion) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{0}
}

func (x *ModuleVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModuleVersion) GetSchema() string {
	if x != nil && x.Schema != nil {
		return *x.Schema
	}
	return ""
}

func (x *ModuleVersion) GetReplaces() []string {
	if x != nil {
		return x.Replaces
	}
	return nil
}

// Dependency represents a dependency to another module.
type ModuleDependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace specifies the dependent module namespace.
	// The namespace groups one or more modules with each other.
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Name specifies the dependent module name.
	// The module name represents this module in a namespace.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Type specifies the dependent module type.
	// The module type represents in th emost cases the underlying technology.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Version specifies the dependent module version.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Direction specifies the dependency direction.
	// If omitted, the default is UPSTREAM.
	Direction *DependencyDirection `protobuf:"varint,5,opt,name=direction,proto3,enum=opendependency.org.spec.v1.DependencyDirection,oneof" json:"direction,omitempty"`
}

func (x *ModuleDependency) Reset() {
	*x = ModuleDependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDependency) ProtoMessage() {}

func (x *ModuleDependency) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDependency.ProtoReflect.Descriptor instead.
func (*ModuleDependency) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{1}
}

func (x *ModuleDependency) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ModuleDependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModuleDependency) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ModuleDependency) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ModuleDependency) GetDirection() DependencyDirection {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return DependencyDirection_UPSTREAM
}

// Module represents an arbitrary artefact.
type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace specifies the module namespace.
	// The namespace groups one or more modules with each other.
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Name specifies the module name.
	// The module name represents this module in a namespace.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Type specifies the module type.
	// The module type represents in th emost cases the underlying technology.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// ModuleVersion specifies the module version details.
	Version *ModuleVersion `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Annotations contains arbitrary metadata.
	Annotations map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Dependencies specifies zero, one or more dependencies to other modules.
	Dependencies []*ModuleDependency `protobuf:"bytes,6,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{2}
}

func (x *Module) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Module) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Module) GetVersion() *ModuleVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *Module) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Module) GetDependencies() []*ModuleDependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

var File_spec_proto protoreflect.FileDescriptor

var file_spec_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6f, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x22, 0x67, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x22, 0xd4, 0x01, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfc, 0x02, 0x0a, 0x06, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x55,
	0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x33, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c,
	0x0a, 0x08, 0x55, 0x50, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x44, 0x4f, 0x57, 0x4e, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x01, 0x42, 0x0d, 0x5a, 0x0b,
	0x70, 0x6b, 0x67, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_spec_proto_rawDescOnce sync.Once
	file_spec_proto_rawDescData = file_spec_proto_rawDesc
)

func file_spec_proto_rawDescGZIP() []byte {
	file_spec_proto_rawDescOnce.Do(func() {
		file_spec_proto_rawDescData = protoimpl.X.CompressGZIP(file_spec_proto_rawDescData)
	})
	return file_spec_proto_rawDescData
}

var file_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_spec_proto_goTypes = []interface{}{
	(DependencyDirection)(0), // 0: opendependency.org.spec.v1.DependencyDirection
	(*ModuleVersion)(nil),    // 1: opendependency.org.spec.v1.ModuleVersion
	(*ModuleDependency)(nil), // 2: opendependency.org.spec.v1.ModuleDependency
	(*Module)(nil),           // 3: opendependency.org.spec.v1.Module
	nil,                      // 4: opendependency.org.spec.v1.Module.AnnotationsEntry
}
var file_spec_proto_depIdxs = []int32{
	0, // 0: opendependency.org.spec.v1.ModuleDependency.direction:type_name -> opendependency.org.spec.v1.DependencyDirection
	1, // 1: opendependency.org.spec.v1.Module.version:type_name -> opendependency.org.spec.v1.ModuleVersion
	4, // 2: opendependency.org.spec.v1.Module.annotations:type_name -> opendependency.org.spec.v1.Module.AnnotationsEntry
	2, // 3: opendependency.org.spec.v1.Module.dependencies:type_name -> opendependency.org.spec.v1.ModuleDependency
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_spec_proto_init() }
func file_spec_proto_init() {
	if File_spec_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spec_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleDependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spec_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_spec_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spec_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spec_proto_goTypes,
		DependencyIndexes: file_spec_proto_depIdxs,
		EnumInfos:         file_spec_proto_enumTypes,
		MessageInfos:      file_spec_proto_msgTypes,
	}.Build()
	File_spec_proto = out.File
	file_spec_proto_rawDesc = nil
	file_spec_proto_goTypes = nil
	file_spec_proto_depIdxs = nil
}
